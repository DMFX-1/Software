//////////////////  SYSTEM //////////////////
//////////////////////  Global Settings //////////////////////
utils.loadPlatform("ti.platforms.evm5505");
/* The following DSP/BIOS Features are enabled.  */
bios.enableRealTimeAnalysis(prog);
bios.enableRtdx(prog);
bios.enableTskManager(prog);
prog.module("GBL").ENABLEALLTRC = true;
bios.GBL.MEMORYMODEL = "LARGE";
bios.GBL.MODIFYCLKMD = 0;
bios.GBL.ENABLEINST = 1;
bios.GBL.CLKIN = 12000;
bios.GBL.BOARDNAME = "c5535";
bios.GBL.PROCID = 1;
//////////////////  MEM //////////////////
//////////////////  GENERAL //////////////////
bios.MEM.ARGSSIZE = 0x0080;
bios.MEM.STACKSIZE = 0x1000;
bios.MEM.SYSSTACKSIZE = 0x0800;
bios.MEM.NOMEMORYHEAPS = 1;
//////////////////  BIOS DATA //////////////////
bios.MEM.ARGSSEG = prog.get("SARAM");
bios.MEM.ARGSSEG = prog.get("DARAM");
bios.MEM.STACKSEG = prog.get("SARAM");
bios.MEM.STACKSEG = prog.get("DARAM");
bios.MEM.GBLINITSEG = prog.get("DARAM");
bios.MEM.TRCDATASEG = prog.get("DARAM");
bios.MEM.SYSDATASEG = prog.get("SARAM");
bios.MEM.SYSDATASEG = prog.get("DARAM");
bios.MEM.OBJSEG = prog.get("SARAM");
bios.MEM.OBJSEG = prog.get("DARAM");
//////////////////  BIOS CODE //////////////////
bios.MEM.BIOSSEG = prog.get("SARAM");
//bios.MEM.BIOSOBJSEG = prog.get("DARAM");
bios.MEM.SYSINITSEG = prog.get("SARAM");
bios.MEM.HWISEG = prog.get("DARAM");
bios.MEM.RTDXTEXTSEG = prog.get("DARAM");
//////////////////  COMPILER Sections //////////////////
bios.MEM.TEXTSEG = prog.get("SARAM");
bios.MEM.SWITCHSEG = prog.get("DARAM");
bios.MEM.BSSSEG = prog.get("SARAM");
bios.MEM.CINITSEG = prog.get("DARAM");
bios.MEM.PINITSEG = prog.get("DARAM");
bios.MEM.CONSTSEG = prog.get("SARAM");
bios.MEM.DATASEG = prog.get("SARAM");
bios.MEM.CIOSEG = prog.get("SARAM");
bios.MEM.CIOSEG = prog.get("DARAM");
//bios.MEM.MALLOCSEG = prog.get("SARAM");
//bios.MEM.MALLOCSEG = prog.get("DARAM");
//bios.MEM.REUSECODESPACE = 0;
//////////////////////  DARAM //////////////////////
//bios.MEM.instance("DARAM").createHeap = 1;
//////////////////////  SARAM //////////////////////
//bios.MEM.instance("SARAM").heapSize = 0x3f80;
bios.MEM.instance("SARAM").len = 0x1ef80;
//bios.MEM.instance("SARAM").createHeap = 0;
//////////////////////  SARAM31 //////////////////////
bios.MEM.create("SARAM31");
bios.MEM.instance("SARAM31").comment = "SARAM Block 31 - Used by bootloader";
bios.MEM.instance("SARAM31").base = 0x027000;
bios.MEM.instance("SARAM31").len = 0x1000;
//////////////////////  VECT //////////////////////
bios.MEM.instance("VECT").base = 0x026f80;
//////////////////  Instrumentation //////////////////
//////////////////////  LOG //////////////////////
bios.LOG.OBJMEMSEG = prog.get("DARAM");
bios.LOG.instance("LOG_system").bufSeg = prog.get("DARAM");
bios.LOG.instance("LOG_system").bufLen = 4096;
bios.LOG.create("trace");
bios.LOG.instance("trace").comment = "LOG_printf";
bios.LOG.instance("trace").bufSeg = prog.get("SARAM31");
bios.LOG.instance("trace").bufLen = 4096;
//////////////////////  STS //////////////////////
bios.STS.create("STS_LcdMenu");
bios.STS.instance("STS_LcdMenu").comment = "LcdMenu Task Statistics";
bios.STS.instance("STS_LcdMenu").unitType = "High resolution time based";
bios.STS.create("STS_I2c_Intc_MasterTx");
bios.STS.instance("STS_I2c_Intc_MasterTx").comment = "I2c_Intc_MasterTx statistics";
bios.STS.instance("STS_I2c_Intc_MasterTx").unitType = "High resolution time based";
//////////////////  Scheduling //////////////////
//////////////////////  CLK //////////////////////
bios.CLK.CONFIGURETIMER = 0;
bios.CLK.MICROSECONDS = 1000.0000;
bios.CLK.HIRESTIME = 0;
//bios.CLK.ENABLECLK = 1;
//////////////////////  PRD //////////////////////
bios.PRD.USECLK = 1;
//////////////////  Interrupts //////////////////
//RESET_EVENT  0
//NMI_EVENT    1
//INT0_EVENT   2 <-
//INT1_EVENT   3
//
//TINT_EVENT   4 <-
//PROG0_EVENT  5
//UART_EVENT   6
//PROG1_EVENT  7
//
//DMA_EVENT    8
//PROG2_EVENT  9
//CoProc_EVENT 10
//PROG3_EVENT  11
//
//LCD_EVENT    12
//SAR_EVENT    13 <-
//XMT2_EVENT   14
//RCV2_EVENT   15
//
//Mask0 = 0x2014
//
//XMT3_EVENT   16
//RCV3_EVENT   17
//RTC_EVENT    18
//SPI_EVENT    19
//
//USB_EVENT    20
//GPIO_EVENT   21 <-
//EMIF_EVENT   22
//I2C_EVENT    23 <-
//
//BERR_EVENT   24
//DLOG_EVENT   25
//RTOS_EVENT   26
//RTDXRCV_EVENT  27
//
//RTDXXMT_EVENT  28
//EMUINT_EVENT  29
//SINT30_EVENT  30
//SINT31_EVENT  31
//
//Mask1 = 0x06a0
//////////////////////  HWI //////////////////////
bios.HWI.instance("HWI_INT2").fxn = prog.extern("Int0_ISR");
bios.HWI.instance("HWI_INT2").useDispatcher = 1;
bios.HWI.instance("HWI_INT2").interruptMask0 = "none";
bios.HWI.instance("HWI_INT2").interruptMask1 = "none";
//bios.HWI.instance("HWI_INT2").interruptMask0 = "bitmask";
//bios.HWI.instance("HWI_INT2").interruptMask1 = "bitmask";
//bios.HWI.instance("HWI_INT2").interruptBitMask0 = 0x2014;
//bios.HWI.instance("HWI_INT2").interruptBitMask1 = 0x06a0;
bios.HWI.instance("HWI_INT4").interruptMask0 = "none";
bios.HWI.instance("HWI_INT4").interruptMask1 = "none";
bios.HWI.instance("HWI_INT13").fxn = prog.extern("sarISR");
bios.HWI.instance("HWI_INT13").useDispatcher = 1;
bios.HWI.instance("HWI_INT13").interruptMask0 = "none";
bios.HWI.instance("HWI_INT13").interruptMask1 = "none";
//bios.HWI.instance("HWI_INT13").interruptMask0 = "bitmask";
//bios.HWI.instance("HWI_INT13").interruptMask1 = "bitmask";
//bios.HWI.instance("HWI_INT13").interruptBitMask0 = 0x2014;
//bios.HWI.instance("HWI_INT13").interruptBitMask1 = 0x06a0;
bios.HWI.instance("HWI_INT21").fxn = prog.extern("gpioISR");
bios.HWI.instance("HWI_INT21").useDispatcher = 1;
bios.HWI.instance("HWI_INT21").interruptMask0 = "none";
bios.HWI.instance("HWI_INT21").interruptMask1 = "none";
//bios.HWI.instance("HWI_INT21").interruptMask0 = "bitmask";
//bios.HWI.instance("HWI_INT21").interruptMask1 = "bitmask";
//bios.HWI.instance("HWI_INT21").interruptBitMask0 = 0x2014;
//bios.HWI.instance("HWI_INT21").interruptBitMask1 = 0x06a0;
bios.HWI.instance("HWI_INT23").fxn = prog.extern("i2c_isr");
bios.HWI.instance("HWI_INT23").useDispatcher = 1;
bios.HWI.instance("HWI_INT23").interruptMask0 = "none";
bios.HWI.instance("HWI_INT23").interruptMask1 = "none";
//bios.HWI.instance("HWI_INT23").interruptMask0 = "bitmask";
//bios.HWI.instance("HWI_INT23").interruptMask1 = "bitmask";
//bios.HWI.instance("HWI_INT23").interruptBitMask0 = 0x2014;
//bios.HWI.instance("HWI_INT23").interruptBitMask1 = 0x06a0;
//////////////////////  SWI //////////////////////
bios.SWI.instance("KNL_swi").order = 2;
//////////////////////  TSK //////////////////////
bios.TSK.OBJMEMSEG = prog.get("DARAM");
//bios.TSK.STACKSEG = prog.get("DARAM");
bios.TSK.STACKSIZE = 1024;
bios.TSK.SYSSTACKSIZE = 256;
bios.TSK.PRIORITY = 1;
bios.TSK.instance("TSK_idle").order = 1;
bios.TSK.instance("TSK_idle").stackMemSeg = prog.get("SARAM");
bios.TSK.instance("TSK_idle").allocateTaskName = 1;
bios.TSK.create("MainTsk");
bios.TSK.instance("MainTsk").order = 2;
bios.TSK.instance("MainTsk").fxn = prog.extern("DMFX2");
bios.TSK.instance("MainTsk").comment = "DSP-2 Main Task";
bios.TSK.instance("MainTsk").allocateTaskName = 1;
bios.TSK.instance("MainTsk").priority = 15;
bios.TSK.create("Tsk_LcdMenu");
bios.TSK.instance("Tsk_LcdMenu").order = 3;
bios.TSK.instance("Tsk_LcdMenu").fxn = prog.extern("LcdMenu");
bios.TSK.instance("Tsk_LcdMenu").comment = "LCD Menu, SAR,  GPIO buttons Task";
bios.TSK.instance("Tsk_LcdMenu").allocateTaskName = 1;
bios.TSK.instance("Tsk_LcdMenu").priority = 14;
bios.TSK.create("Tsk_I2c_Intc_MasterTx");
bios.TSK.instance("Tsk_I2c_Intc_MasterTx").order = 4;
bios.TSK.instance("Tsk_I2c_Intc_MasterTx").fxn = prog.extern("I2c_Intc_MasterTx");
bios.TSK.instance("Tsk_I2c_Intc_MasterTx").comment = "I2C Interrupt TX Task";
bios.TSK.instance("Tsk_I2c_Intc_MasterTx").allocateTaskName = 1;
bios.TSK.instance("Tsk_I2c_Intc_MasterTx").priority = 13;
//bios.TSK.create("Tsk_Tune");
//bios.TSK.instance("Tsk_Tune").order = 5;
//bios.TSK.instance("Tsk_Tune").fxn = prog.extern("TuneTsk");
//bios.TSK.instance("Tsk_Tune").comment = "Tuner Task";
//bios.TSK.instance("Tsk_Tune").allocateTaskName = 1;
//bios.TSK.instance("Tsk_Tune").priority = 12;
//////////////////////  IDL //////////////////////
bios.IDL.AUTOCALCULATE = 1;
//////////////////  Synchronization //////////////////
//////////////////////  SEM //////////////////////
//bios.SEM.OBJMEMSEG = prog.get("DARAM");
bios.SEM.create("SEM_I2c_Intc");
bios.SEM.instance("SEM_I2c_Intc").comment = "I2C interrupt Semaphore";
bios.SEM.create("SEM_Menu");
bios.SEM.instance("SEM_Menu").comment = "Possible Menu changes Semaphore";
bios.SEM.create("SEM_Int0");
bios.SEM.instance("SEM_Int0").comment = "INT0 Semaphore";
//////////////////  Input/Output //////////////////
//////////////////////  RTDX //////////////////////
bios.RTDX.ENABLERTDX = 1;
//////////////////////  HST //////////////////////
bios.HST.HOSTLINKTYPE = "RTDX";
bios.HST.instance("RTA_fromHost").statistics = 1;
bios.HST.instance("RTA_toHost").frameSize = 8;
bios.HST.instance("RTA_toHost").statistics = 1;
// !GRAPHICAL_CONFIG_TOOL_SCRIPT_INSERT_POINT!

prog.gen();
