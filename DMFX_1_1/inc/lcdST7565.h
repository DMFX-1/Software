/*
 * lcdST7565.h
 *
 *  Created on: Nov 9, 2015
 *      Author: Diego de la Cruz
 */

#ifndef LCDST7565_H_
#define LCDST7565_H_

#include "csl_spi.h"
#include "csl_gpio_intc.h"
// Macros
#define set_LCD_A0(val) CSL_FINS((*GPIO_DOUT0_ADDR), GPIO_IOOUTDATA1_OUT12, val)
#define	SPI_CLK_DIV				(25) //100 // SPI Clock Divisor
#define	SPI_FRAME_LENGTH		(1)	// SPI Frame length
#define FULL_FONT

// Graphic potentiometer pixels
#define VOLGRAPH_SIZE 		80
typedef struct ContextMenu_t {
    char MenuStr[16];
    struct ContextMenu_t *LeftContext;
    struct ContextMenu_t *RightContext;
    struct ContextMenu_t *DownContext;
    struct ContextMenu_t *UpContext;
    Uint16 Cmd;
    Uint16 Val;
} ContextMenu_t;

extern ContextMenu_t MenuTop[];
extern ContextMenu_t MenuMainSet [];
extern ContextMenu_t MenuPatchSet [];
extern ContextMenu_t MenuPatchCmd [];
extern ContextMenu_t MenuComp [];
extern ContextMenu_t MenuDist [];
extern ContextMenu_t MenuDistType [];
extern ContextMenu_t MenuDistGen [];
extern ContextMenu_t MenuEqParam [];
extern ContextMenu_t MenuPhaser [];
extern ContextMenu_t MenuPh_Stereo [];
extern ContextMenu_t MenuWahType [];
extern ContextMenu_t MenuNoise [];
extern ContextMenu_t MenuDelay [];
extern ContextMenu_t MenuDelType [];
extern ContextMenu_t MenuDel_LFO [];
extern ContextMenu_t MenuDel_Stereo [];
extern ContextMenu_t MenuEcho [];
extern ContextMenu_t MenuEcho_Stereo [];
extern ContextMenu_t MenuChorus [];
extern ContextMenu_t MenuChorusType [];
extern ContextMenu_t MenuChorus_Stereo [];
extern ContextMenu_t MenuFlanger [];
extern ContextMenu_t MenuFl_Stereo [];
extern ContextMenu_t MenuPhShift [];
extern ContextMenu_t MenuTremolo [];
extern ContextMenu_t MenuReverb [];
extern ContextMenu_t MenuRevType [];
extern ContextMenu_t MenuPot [];
extern ContextMenu_t MenuTuner [];

CSL_Status lcd_cmd(CSL_SpiHandle hSpi, Uint16 byte);
CSL_Status lcd_data(CSL_SpiHandle hSpi, Uint16 byte);
CSL_Status lcd_reset(CSL_SpiHandle hSpi);
CSL_Status lcd_bright (CSL_SpiHandle hSpi, Int16 bValue );
CSL_Status lcd_goto (CSL_SpiHandle hSpi, Uint8 bColumn, Uint8 bRow );
CSL_Status lcd_clear ( CSL_SpiHandle hSpi );
CSL_Status lcd_init(CSL_SpiHandle hSpi);
void lcd_sleep ( CSL_SpiHandle hSpi );
void lcd_wakeup ( CSL_SpiHandle hSpi );
void lcd_standby (CSL_SpiHandle hSpi, Uint8 bWakeUp );
static void _lcd_process_putc_newline (CSL_SpiHandle hSpi);
void lcd_putc (CSL_SpiHandle hSpi, char c );
CSL_Status lcd_test(int argv);
Int16 lcd_printstring(CSL_SpiHandle hSpi, char *a, Uint16 length);
void lcd_VolGraph(CSL_SpiHandle hSpi, Uint16 *Vol, char* Label[], char NumPots, char *Step);
void LcdMenu(void);
void lcd_Tuner(CSL_SpiHandle hSpi);
void lcd_DrawTunerCursors(CSL_SpiHandle hSpi, Uint8 row);

/************************************************************************/
/* LCD Parameters                                                       */
/************************************************************************/

#define ST7565_LCD_PARAM_WIDTH               128U //128U
#define ST7565_LCD_PARAM_HEIGHT              32U
#define ST7565_LCD_PARAM_PAGEHEIGHT          8U
/* Rows max (ST7565_LCD_PARAM_HEIGHT/ST7565_LCD_PARAM_PAGEHEIGHT) */
#define ST7565_LCD_MAX_ROWS                  8U
#define ST7565_LCD_MASK_ROWS                 0x07
#define ST7565_LCD_MAX_COLUMNS               ST7565_LCD_PARAM_WIDTH
#define ST7565_LCD_MASK_COLUMNS              0x7F

#define ST7565_LCD_PARAM_BRIGHTNESS          0x0

#define ST7565_LCD_PARAM_FONT_WIDTH          5
#define ST7565_LCD_PARAM_FONT_CHARWIDTH      7
#define ST7565_LCD_PARAM_FONT_HEIGHT         7
#define ST7565_LCD_PARAM_FONT_CHARHEIGHT     8
#ifndef FULL_FONT
#define ST7565_LCD_PARAM_FONT_CHAR_MINVAL    32
#define ST7565_LCD_PARAM_FONT_CHAR_MAXVAL    126
#else
#define ST7565_LCD_PARAM_FONT_CHAR_MINVAL    0
#define ST7565_LCD_PARAM_FONT_CHAR_MAXVAL    255
#endif

/************************************************************************/
/* Commands                                                             */
/************************************************************************/
#define ST7565_LCD_CMD_DISPLAY_OFF           0xAE
#define ST7565_LCD_CMD_DISPLAY_ON            0xAF

#define ST7565_LCD_CMD_SET_DISP_START_LINE   0x40
#define ST7565_LCD_CMD_SET_PAGE              0xB0

#define ST7565_LCD_CMD_SET_COLUMN_UPPER      0x10
#define ST7565_LCD_CMD_SET_COLUMN_LOWER      0x00

#define ST7565_LCD_CMD_SET_ADC_NORMAL        0xA0
#define ST7565_LCD_CMD_SET_ADC_REVERSE       0xA1

#define ST7565_LCD_CMD_SET_DISP_NORMAL       0xA6
#define ST7565_LCD_CMD_SET_DISP_REVERSE      0xA7

#define ST7565_LCD_CMD_SET_ALLPTS_NORMAL     0xA4
#define ST7565_LCD_CMD_SET_ALLPTS_ON         0xA5
#define ST7565_LCD_CMD_SET_BIAS_9            0xA2
#define ST7565_LCD_CMD_SET_BIAS_7            0xA3

#define ST7565_LCD_CMD_RMW                   0xE0
#define ST7565_LCD_CMD_RMW_CLEAR             0xEE
#define ST7565_LCD_CMD_INTERNAL_RESET        0xE2
#define ST7565_LCD_CMD_SET_COM_NORMAL        0xC0
#define ST7565_LCD_CMD_SET_COM_REVERSE       0xC8
#define ST7565_LCD_CMD_SET_POWER_CONTROL     0x28
#define ST7565_LCD_CMD_SET_RESISTOR_RATIO    0x20
#define ST7565_LCD_CMD_SET_VOLUME_FIRST      0x81
#define ST7565_LCD_CMD_SET_VOLUME_SECOND     0x0
#define ST7565_LCD_CMD_SET_STATIC_OFF        0xAC
#define ST7565_LCD_CMD_SET_STATIC_ON         0xAD
#define ST7565_LCD_CMD_SET_STATIC_REG        0x0
#define ST7565_LCD_CMD_SET_BOOSTER_FIRST     0xF8
#define ST7565_LCD_CMD_SET_BOOSTER_234       0
#define ST7565_LCD_CMD_SET_BOOSTER_5         1
#define ST7565_LCD_CMD_SET_BOOSTER_6         3
#define ST7565_LCD_CMD_NOP                   0xE3
#define ST7565_LCD_CMD_TEST                  0xF0

/************************************************************************/
/* LCD Format Characters                                                */
/************************************************************************/
/**
 * Screen Newline Character
 */
#define ST7565_LCD_FMT_NEWLINE ('\n')
/**
 * Space Special Character Followed by <Number of Character Space>
 *  This helps to add a number of space characters
 *  The number is always in HEX code of 2 digits.
 *
 *  Eg. "\x0105Testing"
 *    This would add 5 spaces by \x01-05 before pringing "Testing"
 */
#define ST7565_LCD_FMT_SPACE  ('\x01')
/**
 * Raw Format Special Character Followed by
 *  <Low Byte Size> and <High Byte Size> Then the Raw 8bit Data
 *  Both the sizes in Hex 2 digit number format
 *  The 8bit data bytes are also coded in string as Hex 2 digit numbers
 *
 *  Eg. "\x02050011A1032F5A"
 *    In this example we have 5 bytes denoted by \x02-05-00
 *    High Byte = 0 Low Byte = 5
 *    And special direct graphic characters: 11-A1-03-2F-5A
 */
#define ST7565_LCD_FMT_RAW    ('\x02')
 /**
 * Font Specifier Special Character Followed by 1 Byte of Font Number
 *
 * - Not Implemented Do not USE
 */
#define ST7565_LCD_FMT_FONT   ('\x03')
/**
 * Direct Set Co-ordinates Special Character Followed by 1 Byte of Column
 *  and 1 Byte of Row specification
 */
#define ST7565_LCD_FMT_COORDINATES   ('\x04')
/**
 * Direct Column Offset Special Character Followed by
 *  1 Byte of Number of Columns to Space up
 */
#define ST7565_LCD_FMT_COLUMNOFFSET  ('\x05')
/**
 * Backspace Character for Correction - Would clear the previous character
 *  and Restore the Row/Column positions
 */
#define ST7565_LCD_FMT_BACKSPACE ('\x08')
/**
 * Cursor Visible Special Character - Make a cursor visible at the
 *  current location - 128 is typically the Cursor
 */
#define ST7565_LCD_FMT_CURSOR ('\x80')

//------------------------------------------------------------------------------
// Rezzonics logo
//------------------------------------------------------------------------------
static const unsigned char Rezzonics [] = {
0x00, 0x00, 0x00, 0x80, 0xE0, 0xE0, 0xE0, 0x60, 0x60, 0x60, 0xE0, 0xE0, 0xC0, 0xC0, 0xE0, 0xE0,
0xE0, 0x60, 0x60, 0x60, 0x60, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x60, 0x60, 0x60, 0x60,
0x60, 0x60, 0x60, 0xE0, 0xE0, 0xE0, 0xE0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0xE0, 0xE0,
0xE0, 0xE0, 0xE0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0,
0x60, 0x60, 0x60, 0xE0, 0xE0, 0xE0, 0xC0, 0xE0, 0xE0, 0xE0, 0x60, 0xE0, 0xE0, 0xE0, 0xC0, 0xE0,
0xE0, 0xE0, 0x60, 0x60, 0x60, 0x60, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x60, 0x60, 0x60, 0x60, 0xE0,
0xE0, 0xC0, 0xE0, 0xE0, 0xE0, 0xE0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0xE0, 0xE0, 0xE0, 0xE0,
0xE0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0xE0, 0xE0, 0xE0, 0xC0, 0x80, 0x00,
0x00, 0x00, 0x00, 0x01, 0x0F, 0x7F, 0xFE, 0xF0, 0xC0, 0x00, 0x00, 0x03, 0x1F, 0x8F, 0x83, 0x00,
0x00, 0x00, 0x30, 0x7C, 0x7C, 0xFC, 0xFC, 0xE1, 0xC0, 0x80, 0x80, 0x80, 0x9C, 0x1C, 0x84, 0x84,
0x84, 0x84, 0xFC, 0xFC, 0xFC, 0x9C, 0x18, 0x10, 0x00, 0x00, 0x00, 0x04, 0x0C, 0x1C, 0x3C, 0xFC,
0xFC, 0x9C, 0x18, 0x10, 0x00, 0x00, 0x00, 0x04, 0x0C, 0x1C, 0xBC, 0xFC, 0xE1, 0xC0, 0x80, 0x80,
0x84, 0x9C, 0x18, 0x00, 0x00, 0x01, 0x03, 0x1F, 0x1F, 0x1E, 0x10, 0x00, 0x00, 0x00, 0x01, 0x03,
0xE4, 0xC0, 0x80, 0x00, 0x00, 0x0C, 0xFC, 0xFC, 0xFD, 0xF0, 0x80, 0x00, 0x00, 0x04, 0xBC, 0xFC,
0xFC, 0xE1, 0xC0, 0x80, 0x80, 0x84, 0x9C, 0x0C, 0x04, 0x84, 0x84, 0x8C, 0xFC, 0xFC, 0xFC, 0x78,
0xF8, 0xE0, 0xC0, 0x0C, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFC, 0xFC, 0x1C, 0x1F, 0x1F, 0x1F, 0x00,
0x00, 0x00, 0x7C, 0xFC, 0xFE, 0xCE, 0x8F, 0x0F, 0x0F, 0x0E, 0x08, 0x08, 0x08, 0x08, 0x0F, 0x0F,
0x0F, 0x0E, 0x80, 0x80, 0x80, 0x80, 0xC1, 0xE3, 0xFF, 0x7F, 0x13, 0x03, 0x03, 0x03, 0x03, 0x03,
0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0x07, 0x07,
0x03, 0x03, 0x03, 0x03, 0x07, 0x07, 0x03, 0x03, 0x7F, 0xFF, 0xFF, 0xC3, 0xC1, 0x81, 0xC1, 0xC3,
0xF7, 0xFF, 0x7F, 0x1B, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x01, 0x00, 0x00,
0x01, 0x07, 0x0F, 0x1F, 0x1E, 0x38, 0x38, 0x3C, 0x1F, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x03, 0x01, 0x01,
0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x80, 0xC0, 0xC0,
0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0xC0,
0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
0xC0, 0x80, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0x1F, 0xFF, 0xFD, 0xE0, 0x80, 0x00, 0x01, 0x07, 0x3F, 0x1F, 0x07, 0x01,
0x01, 0x00, 0x60, 0xF8, 0xF8, 0xF9, 0xF9, 0xC3, 0x81, 0x01, 0x01, 0x01, 0x38, 0x38, 0x08, 0x08,
0x08, 0x08, 0xF8, 0xF9, 0xF9, 0x39, 0x31, 0x20, 0x00, 0x00, 0x00, 0x08, 0x18, 0x38, 0x79, 0xF9,
0xF9, 0x39, 0x31, 0x20, 0x00, 0x00, 0x00, 0x08, 0x18, 0x38, 0x79, 0xF9, 0xC3, 0x81, 0x01, 0x01,
0x08, 0x38, 0x30, 0x01, 0x01, 0x03, 0x07, 0x3F, 0x3F, 0x3D, 0x20, 0x01, 0x01, 0x01, 0x03, 0x07,
0xC9, 0x81, 0x00, 0x00, 0x00, 0x18, 0xF9, 0xF9, 0xFB, 0xE1, 0x01, 0x00, 0x00, 0x08, 0x78, 0xF9,
0xF9, 0xC3, 0x81, 0x01, 0x01, 0x09, 0x38, 0x18, 0x08, 0x08, 0x08, 0x18, 0xF9, 0xF9, 0xF9, 0xF1,
0xF1, 0xC0, 0x80, 0x18, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF8, 0xF9, 0x39, 0x3F, 0x3F, 0x3F, 0x00,
0x00, 0x00, 0xF8, 0xF8, 0xFC, 0x9C, 0x1F, 0x1F, 0x1F, 0x1C, 0x10, 0x10, 0x10, 0x11, 0x1F, 0x1E,
0x1E, 0x1C, 0x00, 0x00, 0x00, 0x01, 0x83, 0xC7, 0xFF, 0xFF, 0x27, 0x07, 0x07, 0x06, 0x07, 0x07,
0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x07,
0x07, 0x07, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,
0x07, 0x07, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x0E, 0x0E, 0x0E,
0x07, 0x07, 0x07, 0x06, 0x0E, 0x0E, 0x07, 0x07, 0xFF, 0xFF, 0xFF, 0x86, 0x82, 0x02, 0x83, 0x87,
0xEF, 0xFF, 0xFF, 0x37, 0x07, 0x07, 0x07, 0x06, 0x06, 0x07, 0x07, 0x07, 0x07, 0x03, 0x01, 0x00,
0x03, 0x0F, 0x1F, 0x3E, 0x3C, 0x70, 0x70, 0x78, 0x3F, 0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0x07, 0x07, 0x03, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x06,
0x06, 0x06, 0x07, 0x07, 0x07, 0x07, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

/************************************************************************/
/* Font Definitions                                                     */
/************************************************************************/
/**
 * 5x7 LCD font 'flipped' for the ST7565 - public domain
 * @note This is a 256 character font. Delete glyphs in order to save Flash
 */
static const Uint8 gca_font[] =
{
#ifdef FULL_FONT
  0x0, 0x0, 0x0, 0x0, 0x0,          /* ASC(00) */
  0x7C, 0xDA, 0xF2, 0xDA, 0x7C,     /* ASC(01) */
  0x7C, 0xD6, 0xF2, 0xD6, 0x7C,     /* ASC(02) */
  0x38, 0x7C, 0x3E, 0x7C, 0x38,   /* ASC(03) */
  0x18, 0x3C, 0x7E, 0x3C, 0x18,   /* ASC(04) */
  0x38, 0xEA, 0xBE, 0xEA, 0x38,   /* ASC(05) */
  0x38, 0x7A, 0xFE, 0x7A, 0x38,   /* ASC(06) */
  0x0, 0x18, 0x3C, 0x18, 0x0,   /* ASC(07) */
  0xFF, 0xE7, 0xC3, 0xE7, 0xFF,   /* ASC(08) */
  0x0, 0x18, 0x24, 0x18, 0x0,   /* ASC(09) */
  0xFF, 0xE7, 0xDB, 0xE7, 0xFF,   /* ASC(10) */
  0xC, 0x12, 0x5C, 0x60, 0x70,   /* ASC(11) */
  0x64, 0x94, 0x9E, 0x94, 0x64,   /* ASC(12) */
  0x2, 0xFE, 0xA0, 0xA0, 0xE0,   /* ASC(13) */
  0x2, 0xFE, 0xA0, 0xA4, 0xFC,   /* ASC(14) */
  0x5A, 0x3C, 0xE7, 0x3C, 0x5A,   /* ASC(15) */
  0xFE, 0x7C, 0x38, 0x38, 0x10,   /* ASC(16) */
  0x10, 0x38, 0x38, 0x7C, 0xFE,   /* ASC(17) */
  0x28, 0x44, 0xFE, 0x44, 0x28,   /* ASC(18) */
  0xFA, 0xFA, 0x0, 0xFA, 0xFA,   /* ASC(19) */
  0x60, 0x90, 0xFE, 0x80, 0xFE,   /* ASC(20) */
  0x0, 0x66, 0x91, 0xA9, 0x56,   /* ASC(21) */
  0x6, 0x6, 0x6, 0x6, 0x6,   /* ASC(22) */
  0x29, 0x45, 0xFF, 0x45, 0x29,   /* ASC(23) */
  0x10, 0x20, 0x7E, 0x20, 0x10,   /* ASC(24) */
  0x8, 0x4, 0x7E, 0x4, 0x8,   /* ASC(25) */
  0x10, 0x10, 0x54, 0x38, 0x10,   /* ASC(26) */
  0x10, 0x38, 0x54, 0x10, 0x10,   /* ASC(27) */
  0x78, 0x8, 0x8, 0x8, 0x8,   /* ASC(28) */
  0x30, 0x78, 0x30, 0x78, 0x30,   /* ASC(29) */
  0xC, 0x1C, 0x7C, 0x1C, 0xC,   /* ASC(30) */
  0x60, 0x70, 0x7C, 0x70, 0x60,   /* ASC(31) */
#endif
    0x0, 0x0, 0x0, 0x0, 0x0, /* ASC(32) */
    0x0, 0x0, 0xFA, 0x0, 0x0, /* ASC(33) */
    0x0, 0xE0, 0x0, 0xE0, 0x0, /* ASC(34) */
    0x28, 0xFE, 0x28, 0xFE, 0x28, /* ASC(35) */
    0x24, 0x54, 0xFE, 0x54, 0x48, /* ASC(36) */
    0xC4, 0xC8, 0x10, 0x26, 0x46, /* ASC(37) */
    0x6C, 0x92, 0x6A, 0x4, 0xA, /* ASC(38) */
    0x0, 0x10, 0xE0, 0xC0, 0x0, /* ASC(39) */
    0x0, 0x38, 0x44, 0x82, 0x0, /* ASC(40) */
    0x0, 0x82, 0x44, 0x38, 0x0, /* ASC(41) */
    0x54, 0x38, 0xFE, 0x38, 0x54, /* ASC(42) */
    0x10, 0x10, 0x7C, 0x10, 0x10, /* ASC(43) */
    0x0, 0x1, 0xE, 0xC, 0x0, /* ASC(44) */
    0x10, 0x10, 0x10, 0x10, 0x10, /* ASC(45) */
    0x0, 0x0, 0x6, 0x6, 0x0, /* ASC(46) */
    0x4, 0x8, 0x10, 0x20, 0x40, /* ASC(47) */
    0x7C, 0x8A, 0x92, 0xA2, 0x7C, /* ASC(48) */
    0x0, 0x42, 0xFE, 0x2, 0x0, /* ASC(49) */
    0x4E, 0x92, 0x92, 0x92, 0x62, /* ASC(50) */
    0x84, 0x82, 0x92, 0xB2, 0xCC, /* ASC(51) */
    0x18, 0x28, 0x48, 0xFE, 0x8, /* ASC(52) */
    0xE4, 0xA2, 0xA2, 0xA2, 0x9C, /* ASC(53) */
    0x3C, 0x52, 0x92, 0x92, 0x8C, /* ASC(54) */
    0x82, 0x84, 0x88, 0x90, 0xE0, /* ASC(55) */
    0x6C, 0x92, 0x92, 0x92, 0x6C, /* ASC(56) */
    0x62, 0x92, 0x92, 0x94, 0x78, /* ASC(57) */
    0x0, 0x0, 0x28, 0x0, 0x0, /* ASC(58) */
    0x0, 0x2, 0x2C, 0x0, 0x0, /* ASC(59) */
    0x0, 0x10, 0x28, 0x44, 0x82, /* ASC(60) */
    0x28, 0x28, 0x28, 0x28, 0x28, /* ASC(61) */
    0x0, 0x82, 0x44, 0x28, 0x10, /* ASC(62) */
    0x40, 0x80, 0x9A, 0x90, 0x60, /* ASC(63) */
    0x7C, 0x82, 0xBA, 0x9A, 0x72, /* ASC(64) */
    0x3E, 0x48, 0x88, 0x48, 0x3E, /* ASC(65) */
    0xFE, 0x92, 0x92, 0x92, 0x6C, /* ASC(66) */
    0x7C, 0x82, 0x82, 0x82, 0x44, /* ASC(67) */
    0xFE, 0x82, 0x82, 0x82, 0x7C, /* ASC(68) */
    0xFE, 0x92, 0x92, 0x92, 0x82, /* ASC(69) */
    0xFE, 0x90, 0x90, 0x90, 0x80, /* ASC(70) */
    0x7C, 0x82, 0x82, 0x8A, 0xCE, /* ASC(71) */
    0xFE, 0x10, 0x10, 0x10, 0xFE, /* ASC(72) */
    0x0, 0x82, 0xFE, 0x82, 0x0, /* ASC(73) */
    0x4, 0x2, 0x82, 0xFC, 0x80, /* ASC(74) */
    0xFE, 0x10, 0x28, 0x44, 0x82, /* ASC(75) */
    0xFE, 0x2, 0x2, 0x2, 0x2, /* ASC(76) */
    0xFE, 0x40, 0x38, 0x40, 0xFE, /* ASC(77) */
    0xFE, 0x20, 0x10, 0x8, 0xFE, /* ASC(78) */
    0x7C, 0x82, 0x82, 0x82, 0x7C, /* ASC(79) */
    0xFE, 0x90, 0x90, 0x90, 0x60, /* ASC(80) */
    0x7C, 0x82, 0x8A, 0x84, 0x7A, /* ASC(81) */
    0xFE, 0x90, 0x98, 0x94, 0x62, /* ASC(82) */
    0x64, 0x92, 0x92, 0x92, 0x4C, /* ASC(83) */
    0xC0, 0x80, 0xFE, 0x80, 0xC0, /* ASC(84) */
    0xFC, 0x2, 0x2, 0x2, 0xFC, /* ASC(85) */
    0xF8, 0x4, 0x2, 0x4, 0xF8, /* ASC(86) */
    0xFC, 0x2, 0x1C, 0x2, 0xFC, /* ASC(87) */
    0xC6, 0x28, 0x10, 0x28, 0xC6, /* ASC(88) */
    0xC0, 0x20, 0x1E, 0x20, 0xC0, /* ASC(89) */
    0x86, 0x9A, 0x92, 0xB2, 0xC2, /* ASC(90) */
    0x0, 0xFE, 0x82, 0x82, 0x82, /* ASC(91) */
    0x40, 0x20, 0x10, 0x8, 0x4, /* ASC(92) */
    0x0, 0x82, 0x82, 0x82, 0xFE, /* ASC(93) */
    0x20, 0x40, 0x80, 0x40, 0x20, /* ASC(94) */
    0x2, 0x2, 0x2, 0x2, 0x2, /* ASC(95) */
    0x0, 0xC0, 0xE0, 0x10, 0x0, /* ASC(96) */
    0x4, 0x2A, 0x2A, 0x1E, 0x2, /* ASC(97) */
    0xFE, 0x14, 0x22, 0x22, 0x1C, /* ASC(98) */
    0x1C, 0x22, 0x22, 0x22, 0x14, /* ASC(99) */
    0x1C, 0x22, 0x22, 0x14, 0xFE, /* ASC(100) */
    0x1C, 0x2A, 0x2A, 0x2A, 0x18, /* ASC(101) */
    0x0, 0x10, 0x7E, 0x90, 0x40, /* ASC(102) */
    0x18, 0x25, 0x25, 0x39, 0x1E, /* ASC(103) */
    0xFE, 0x10, 0x20, 0x20, 0x1E, /* ASC(104) */
    0x0, 0x22, 0xBE, 0x2, 0x0, /* ASC(105) */
    0x4, 0x2, 0x2, 0xBC, 0x0, /* ASC(106) */
    0xFE, 0x8, 0x14, 0x22, 0x0, /* ASC(107) */
    0x0, 0x82, 0xFE, 0x2, 0x0, /* ASC(108) */
    0x3E, 0x20, 0x1E, 0x20, 0x1E, /* ASC(109) */
    0x3E, 0x10, 0x20, 0x20, 0x1E, /* ASC(110) */
    0x1C, 0x22, 0x22, 0x22, 0x1C, /* ASC(111) */
    0x3F, 0x18, 0x24, 0x24, 0x18, /* ASC(112) */
    0x18, 0x24, 0x24, 0x18, 0x3F, /* ASC(113) */
    0x3E, 0x10, 0x20, 0x20, 0x10, /* ASC(114) */
    0x12, 0x2A, 0x2A, 0x2A, 0x24, /* ASC(115) */
    0x20, 0x20, 0xFC, 0x22, 0x24, /* ASC(116) */
    0x3C, 0x2, 0x2, 0x4, 0x3E, /* ASC(117) */
    0x38, 0x4, 0x2, 0x4, 0x38, /* ASC(118) */
    0x3C, 0x2, 0xC, 0x2, 0x3C, /* ASC(119) */
    0x22, 0x14, 0x8, 0x14, 0x22, /* ASC(120) */
    0x32, 0x9, 0x9, 0x9, 0x3E, /* ASC(121) */
    0x22, 0x26, 0x2A, 0x32, 0x22, /* ASC(122) */
    0x0, 0x10, 0x6C, 0x82, 0x0, /* ASC(123) */
    0x0, 0x0, 0xEE, 0x0, 0x0, /* ASC(124) */
    0x0, 0x82, 0x6C, 0x10, 0x0, /* ASC(125) */
    0x40, 0x80, 0x40, 0x20, 0x40, /* ASC(126) */
#ifdef FULL_FONT
  0x3C, 0x64, 0xC4, 0x64, 0x3C,   /* ASC(127) */
  0x78, 0x85, 0x85, 0x86, 0x48,   /* ASC(128) */
  0x5C, 0x2, 0x2, 0x4, 0x5E,   /* ASC(129) */
  0x1C, 0x2A, 0x2A, 0xAA, 0x9A,   /* ASC(130) */
  0x84, 0xAA, 0xAA, 0x9E, 0x82,   /* ASC(131) */
  0x84, 0x2A, 0x2A, 0x1E, 0x82,   /* ASC(132) */
  0x84, 0xAA, 0x2A, 0x1E, 0x2,   /* ASC(133) */
  0x4, 0x2A, 0xAA, 0x9E, 0x2,   /* ASC(134) */
  0x30, 0x78, 0x4A, 0x4E, 0x48,   /* ASC(135) */
  0x9C, 0xAA, 0xAA, 0xAA, 0x9A,   /* ASC(136) */
  0x9C, 0x2A, 0x2A, 0x2A, 0x9A,   /* ASC(137) */
  0x9C, 0xAA, 0x2A, 0x2A, 0x1A,   /* ASC(138) */
  0x0, 0x0, 0xA2, 0x3E, 0x82,   /* ASC(139) */
  0x0, 0x40, 0xA2, 0xBE, 0x42,   /* ASC(140) */
  0x0, 0x80, 0xA2, 0x3E, 0x2,   /* ASC(141) */
  0xF, 0x94, 0x24, 0x94, 0xF,   /* ASC(142) */
  0xF, 0x14, 0xA4, 0x14, 0xF,   /* ASC(143) */
  0x3E, 0x2A, 0xAA, 0xA2, 0x0,   /* ASC(144) */
  0x4, 0x2A, 0x2A, 0x3E, 0x2A,   /* ASC(145) */
  0x3E, 0x50, 0x90, 0xFE, 0x92,   /* ASC(146) */
  0x4C, 0x92, 0x92, 0x92, 0x4C,   /* ASC(147) */
  0x4C, 0x12, 0x12, 0x12, 0x4C,   /* ASC(148) */
  0x4C, 0x52, 0x12, 0x12, 0xC,   /* ASC(149) */
  0x5C, 0x82, 0x82, 0x84, 0x5E,   /* ASC(150) */
  0x5C, 0x42, 0x2, 0x4, 0x1E,   /* ASC(151) */
  0x0, 0xB9, 0x5, 0x5, 0xBE,   /* ASC(152) */
  0x9C, 0x22, 0x22, 0x22, 0x9C,   /* ASC(153) */
  0xBC, 0x2, 0x2, 0x2, 0xBC,   /* ASC(154) */
  0x3C, 0x24, 0xFF, 0x24, 0x24,   /* ASC(155) */
  0x12, 0x7E, 0x92, 0xC2, 0x66,   /* ASC(156) */
  0xD4, 0xF4, 0x3F, 0xF4, 0xD4,   /* ASC(157) */
  0xFF, 0x90, 0x94, 0x6F, 0x4,   /* ASC(158) */
  0x3, 0x11, 0x7E, 0x90, 0xC0,   /* ASC(159) */
  0x4, 0x2A, 0x2A, 0x9E, 0x82,   /* ASC(160) */
  0x0, 0x0, 0x22, 0xBE, 0x82,   /* ASC(161) */
  0xC, 0x12, 0x12, 0x52, 0x4C,   /* ASC(162) */
  0x1C, 0x2, 0x2, 0x44, 0x5E,   /* ASC(163) */
  0x0, 0x5E, 0x50, 0x50, 0x4E,   /* ASC(164) */
  0xBE, 0xB0, 0x98, 0x8C, 0xBE,   /* ASC(165) */
  0x64, 0x94, 0x94, 0xF4, 0x14,   /* ASC(166) */
  0x64, 0x94, 0x94, 0x94, 0x64,   /* ASC(167) */
  0xC, 0x12, 0xB2, 0x2, 0x4,   /* ASC(168) */
  0x1C, 0x10, 0x10, 0x10, 0x10,   /* ASC(169) */
  0x10, 0x10, 0x10, 0x10, 0x1C,   /* ASC(170) */
  0xF4, 0x8, 0x13, 0x35, 0x5D,   /* ASC(171) */
  0xF4, 0x8, 0x14, 0x2C, 0x5F,   /* ASC(172) */
  0x0, 0x0, 0xDE, 0x0, 0x0,   /* ASC(173) */
  0x10, 0x28, 0x54, 0x28, 0x44,   /* ASC(174) */
  0x44, 0x28, 0x54, 0x28, 0x10,   /* ASC(175) */
  0x55, 0x0, 0xAA, 0x0, 0x55,   /* ASC(176) */
  0x55, 0xAA, 0x55, 0xAA, 0x55,   /* ASC(177) */
  0xAA, 0x55, 0xAA, 0x55, 0xAA,   /* ASC(178) */
  0x0, 0x0, 0x0, 0xFF, 0x0,   /* ASC(179) */
  0x8, 0x8, 0x8, 0xFF, 0x0,   /* ASC(180) */
  0x28, 0x28, 0x28, 0xFF, 0x0,   /* ASC(181) */
  0x8, 0x8, 0xFF, 0x0, 0xFF,   /* ASC(182) */
  0x8, 0x8, 0xF, 0x8, 0xF,   /* ASC(183) */
  0x28, 0x28, 0x28, 0x3F, 0x0,   /* ASC(184) */
  0x28, 0x28, 0xEF, 0x0, 0xFF,   /* ASC(185) */
  0x0, 0x0, 0xFF, 0x0, 0xFF,   /* ASC(186) */
  0x28, 0x28, 0x2F, 0x20, 0x3F,   /* ASC(187) */
  0x28, 0x28, 0xE8, 0x8, 0xF8,   /* ASC(188) */
  0x8, 0x8, 0xF8, 0x8, 0xF8,   /* ASC(189) */
  0x28, 0x28, 0x28, 0xF8, 0x0,   /* ASC(190) */
  0x8, 0x8, 0x8, 0xF, 0x0,   /* ASC(191) */
  0x0, 0x0, 0x0, 0xF8, 0x8,   /* ASC(192) */
  0x8, 0x8, 0x8, 0xF8, 0x8,   /* ASC(193) */
  0x8, 0x8, 0x8, 0xF, 0x8,   /* ASC(194) */
  0x0, 0x0, 0x0, 0xFF, 0x8,   /* ASC(195) */
  0x8, 0x8, 0x8, 0x8, 0x8,   /* ASC(196) */
  0x8, 0x8, 0x8, 0xFF, 0x8,   /* ASC(197) */
  0x0, 0x0, 0x0, 0xFF, 0x28,   /* ASC(198) */
  0x0, 0x0, 0xFF, 0x0, 0xFF,   /* ASC(199) */
  0x0, 0x0, 0xF8, 0x8, 0xE8,   /* ASC(200) */
  0x0, 0x0, 0x3F, 0x20, 0x2F,   /* ASC(201) */
  0x28, 0x28, 0xE8, 0x8, 0xE8,   /* ASC(202) */
  0x28, 0x28, 0x2F, 0x20, 0x2F,   /* ASC(203) */
  0x0, 0x0, 0xFF, 0x0, 0xEF,   /* ASC(204) */
  0x28, 0x28, 0x28, 0x28, 0x28,   /* ASC(205) */
  0x28, 0x28, 0xEF, 0x0, 0xEF,   /* ASC(206) */
  0x28, 0x28, 0x28, 0xE8, 0x28,   /* ASC(207) */
  0x8, 0x8, 0xF8, 0x8, 0xF8,   /* ASC(208) */
  0x28, 0x28, 0x28, 0x2F, 0x28,   /* ASC(209) */
  0x8, 0x8, 0xF, 0x8, 0xF,   /* ASC(210) */
  0x0, 0x0, 0xF8, 0x8, 0xF8,   /* ASC(211) */
  0x0, 0x0, 0x0, 0xF8, 0x28,   /* ASC(212) */
  0x0, 0x0, 0x0, 0x3F, 0x28,   /* ASC(213) */
  0x0, 0x0, 0xF, 0x8, 0xF,   /* ASC(214) */
  0x8, 0x8, 0xFF, 0x8, 0xFF,   /* ASC(215) */
  0x28, 0x28, 0x28, 0xFF, 0x28,   /* ASC(216) */
  0x8, 0x8, 0x8, 0xF8, 0x0,   /* ASC(217) */
  0x0, 0x0, 0x0, 0xF, 0x8,   /* ASC(218) */
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF,   /* ASC(219) */
  0xF, 0xF, 0xF, 0xF, 0xF,   /* ASC(220) */
  0xFF, 0xFF, 0xFF, 0x0, 0x0,   /* ASC(221) */
  0x0, 0x0, 0x0, 0xFF, 0xFF,   /* ASC(222) */
  0xF0, 0xF0, 0xF0, 0xF0, 0xF0,   /* ASC(223) */
  0x1C, 0x22, 0x22, 0x1C, 0x22,   /* ASC(224) */
  0x3E, 0x54, 0x54, 0x7C, 0x28,   /* ASC(225) */
  0x7E, 0x40, 0x40, 0x60, 0x60,   /* ASC(226) */
  0x40, 0x7E, 0x40, 0x7E, 0x40,   /* ASC(227) */
  0xC6, 0xAA, 0x92, 0x82, 0xC6,   /* ASC(228) */
  0x1C, 0x22, 0x22, 0x3C, 0x20,   /* ASC(229) */
  0x2, 0x7E, 0x4, 0x78, 0x4,   /* ASC(230) */
  0x60, 0x40, 0x7E, 0x40, 0x40,   /* ASC(231) */
  0x99, 0xA5, 0xE7, 0xA5, 0x99,   /* ASC(232) */
  0x38, 0x54, 0x92, 0x54, 0x38,   /* ASC(233) */
  0x32, 0x4E, 0x80, 0x4E, 0x32,   /* ASC(234) */
  0xC, 0x52, 0xB2, 0xB2, 0xC,   /* ASC(235) */
  0xC, 0x12, 0x1E, 0x12, 0xC,   /* ASC(236) */
  0x3D, 0x46, 0x5A, 0x62, 0xBC,   /* ASC(237) */
  0x7C, 0x92, 0x92, 0x92, 0x0,   /* ASC(238) */
  0x7E, 0x80, 0x80, 0x80, 0x7E,   /* ASC(239) */
  0x54, 0x54, 0x54, 0x54, 0x54,   /* ASC(240) */
  0x22, 0x22, 0xFA, 0x22, 0x22,   /* ASC(241) */
  0x2, 0x8A, 0x52, 0x22, 0x2,   /* ASC(242) */
  0x2, 0x22, 0x52, 0x8A, 0x2,   /* ASC(243) */
  0x0, 0x0, 0xFF, 0x80, 0xC0,   /* ASC(244) */
  0x7, 0x1, 0xFF, 0x0, 0x0,   /* ASC(245) */
  0x10, 0x10, 0xD6, 0xD6, 0x10,   /* ASC(246) */
  0x6C, 0x48, 0x6C, 0x24, 0x6C,   /* ASC(247) */
  0x60, 0xF0, 0x90, 0xF0, 0x60,   /* ASC(248) */
  0x0, 0x0, 0x18, 0x18, 0x0,   /* ASC(249) */
  0x0, 0x0, 0x8, 0x8, 0x0,   /* ASC(250) */
  0xC, 0x2, 0xFF, 0x80, 0x80,   /* ASC(251) */
  0x0, 0xF8, 0x80, 0x80, 0x78,   /* ASC(252) */
  0x0, 0x98, 0xB8, 0xE8, 0x48,   /* ASC(253) */
  0x0, 0x3C, 0x3C, 0x3C, 0x3C,   /* ASC(254) */
#endif
    };
#endif /* LCDST7565_H_ */
